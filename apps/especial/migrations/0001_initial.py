# Generated by Django 5.1.1 on 2025-03-10 18:09

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="DiscapacidadListado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cod_disc", models.IntegerField(verbose_name="Cod_Discapacidad")),
                (
                    "discapacidad",
                    models.CharField(max_length=255, verbose_name="Discapacidad"),
                ),
            ],
            options={
                "verbose_name": "Listado_Discapacidad",
                "verbose_name_plural": "Listados_Discapacidades",
                "db_table": "listado_discapacidad",
            },
        ),
        migrations.CreateModel(
            name="EscuelacDiscapacidad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cueanexo", models.CharField(max_length=9, verbose_name="Cueanexo")),
                (
                    "mes",
                    models.CharField(
                        choices=[
                            ("ABRIL", "ABRIL"),
                            ("JULIO", "JULIO"),
                            ("NOVIEMBRE", "NOVIEMBRE"),
                            ("DICIEMBRE", "DICIEMBRE"),
                        ],
                        max_length=25,
                        verbose_name="Mes",
                    ),
                ),
                (
                    "anio",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(2025)],
                        verbose_name="A単o",
                    ),
                ),
                ("inclusion", models.IntegerField(verbose_name="Inclusion")),
                (
                    "acompanamiento",
                    models.BooleanField(default=False, verbose_name="Acompa単amiento"),
                ),
                (
                    "cuecuit_instit",
                    models.CharField(max_length=11, verbose_name="CUE_CUIT"),
                ),
                ("sector", models.CharField(max_length=50, verbose_name="Sector")),
                ("cud", models.IntegerField(verbose_name="CUD")),
                ("porcen_eval", models.IntegerField(verbose_name="Procentaje")),
                ("graduados", models.IntegerField(verbose_name="Graduados")),
                ("doc_capac", models.IntegerField(verbose_name="Docentes")),
                ("mat_eq", models.IntegerField(verbose_name="Materiales")),
            ],
            options={
                "verbose_name": "Escuela_Discapacidad",
                "verbose_name_plural": "Escuelas_Discpacidades",
                "db_table": "escuela_discapacidad",
            },
        ),
        migrations.CreateModel(
            name="FuncionApoyoInclusion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cod_func", models.IntegerField(verbose_name="Cod_Funcion")),
                ("funcion", models.CharField(max_length=255, verbose_name="Funcion")),
            ],
            options={
                "verbose_name": "Funcion_Apoyo",
                "verbose_name_plural": "Funciones_Apoyos",
                "db_table": "funcion_apoyo",
            },
        ),
        migrations.CreateModel(
            name="MAI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cueanexo", models.CharField(max_length=9, verbose_name="Cueanexo")),
                (
                    "actividad",
                    models.CharField(
                        choices=[("APOYO", "APOYO"), ("SEGUIMIENTO", "SEGUIMIENTO")],
                        max_length=25,
                        verbose_name="Actividad",
                    ),
                ),
                ("total", models.IntegerField(verbose_name="Total")),
                (
                    "mes",
                    models.CharField(
                        choices=[
                            ("ABRIL", "ABRIL"),
                            ("JULIO", "JULIO"),
                            ("NOVIEMBRE", "NOVIEMBRE"),
                            ("DICIEMBRE", "DICIEMBRE"),
                        ],
                        max_length=25,
                        verbose_name="Mes",
                    ),
                ),
                (
                    "anio",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(2025)],
                        verbose_name="A単o",
                    ),
                ),
                ("admision", models.IntegerField(verbose_name="Admision")),
                ("contexto", models.IntegerField(verbose_name="Contexto")),
                ("barreras", models.TextField(verbose_name="Barreras")),
                ("domicilio", models.IntegerField(verbose_name="Domicilio")),
                ("redes", models.IntegerField(verbose_name="Redes")),
                ("instit", models.IntegerField(verbose_name="Instituciones")),
            ],
            options={
                "verbose_name": "MAI",
                "verbose_name_plural": "MAIS",
                "db_table": "registro_mai",
            },
        ),
        migrations.CreateModel(
            name="Profesionales",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cod_prof", models.IntegerField(verbose_name="Cod_Profesional")),
                (
                    "profesion",
                    models.CharField(max_length=255, verbose_name="Profesion"),
                ),
            ],
            options={
                "verbose_name": "Listado_Profesion",
                "verbose_name_plural": "Listados_Profesiones",
                "db_table": "listado_profesion",
            },
        ),
        migrations.CreateModel(
            name="ServiciosDiscapacidad",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cod_serv", models.IntegerField(verbose_name="Cod_Servicio")),
                ("servicio", models.CharField(max_length=255, verbose_name="Servicio")),
            ],
            options={
                "verbose_name": "Servicio_Discapacidad",
                "verbose_name_plural": "Servicios_Discapacidades",
                "db_table": "servicio_discapacidad",
            },
        ),
        migrations.CreateModel(
            name="EquipoInterProf",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cueanexo", models.CharField(max_length=9, verbose_name="Cueanexo")),
                (
                    "mes",
                    models.CharField(
                        choices=[
                            ("ABRIL", "ABRIL"),
                            ("JULIO", "JULIO"),
                            ("NOVIEMBRE", "NOVIEMBRE"),
                            ("DICIEMBRE", "DICIEMBRE"),
                        ],
                        max_length=25,
                        verbose_name="Mes",
                    ),
                ),
                (
                    "anio",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(2025)],
                        verbose_name="A単o",
                    ),
                ),
                ("dni", models.CharField(max_length=8, verbose_name="DNI")),
                (
                    "apellido",
                    models.CharField(max_length=255, verbose_name="Apellidos"),
                ),
                ("nombres", models.CharField(max_length=255, verbose_name="Nombres")),
                ("atendidos", models.IntegerField(verbose_name="Atendidos")),
                ("cue", models.CharField(max_length=9, verbose_name="Cue")),
                ("oferta", models.CharField(max_length=255, verbose_name="Oferta")),
                (
                    "situcion",
                    models.CharField(max_length=255, verbose_name="situacion"),
                ),
                ("apoyo", models.IntegerField(verbose_name="Apoyo")),
                ("seguimiento", models.IntegerField(verbose_name="Seguimiento")),
                ("riesgo", models.IntegerField(verbose_name="Riesgo")),
                ("causal", models.CharField(max_length=255, verbose_name="Causal")),
                ("ppi", models.IntegerField(verbose_name="PPI")),
                ("plan_acompa", models.CharField(max_length=255, verbose_name="Plan")),
                ("egresados", models.IntegerField(verbose_name="Egresados")),
                ("deportes", models.IntegerField(verbose_name="Deportes")),
                (
                    "accesibilidad",
                    models.BooleanField(default=False, verbose_name="Accesibilidad"),
                ),
                (
                    "articulacion",
                    models.CharField(max_length=11, verbose_name="Articulacion"),
                ),
                (
                    "nombre_artic",
                    models.CharField(max_length=255, verbose_name="Nombre_Institucion"),
                ),
                (
                    "alfabetizacion",
                    models.BooleanField(default=False, verbose_name="Alfabetizacion"),
                ),
                (
                    "prof",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="especial.profesionales",
                        verbose_name="Profesion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipo Interdisciplinario",
                "verbose_name_plural": "Equipos Interdisciplinarios",
                "db_table": "equipo_interdisciplinario",
            },
        ),
        migrations.CreateModel(
            name="MaestrosGrado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cueanexo", models.CharField(max_length=9, verbose_name="Cueanexo")),
                (
                    "mes",
                    models.CharField(
                        choices=[
                            ("ABRIL", "ABRIL"),
                            ("JULIO", "JULIO"),
                            ("NOVIEMBRE", "NOVIEMBRE"),
                            ("DICIEMBRE", "DICIEMBRE"),
                        ],
                        max_length=25,
                        verbose_name="Mes",
                    ),
                ),
                (
                    "anio",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(2025)],
                        verbose_name="A単o",
                    ),
                ),
                ("dni_doc", models.CharField(max_length=8, verbose_name="DNI")),
                (
                    "apellido",
                    models.CharField(max_length=255, verbose_name="Apellidos"),
                ),
                ("nombres", models.CharField(max_length=255, verbose_name="Nombres")),
                (
                    "matric_compartida",
                    models.IntegerField(verbose_name="Matric_Compartida"),
                ),
                (
                    "espacio_compartido",
                    models.IntegerField(verbose_name="Espacio_Compartido"),
                ),
                ("sede", models.IntegerField(verbose_name="Sede")),
                ("cud", models.IntegerField(verbose_name="CUD")),
                ("edad", models.IntegerField(verbose_name="Edad")),
                (
                    "discapadidad",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="especial.discapacidadlistado",
                        verbose_name="Discapacidad",
                    ),
                ),
                (
                    "pof",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="especial.funcionapoyoinclusion",
                        verbose_name="POF",
                    ),
                ),
                (
                    "servicio_maestro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="especial.serviciosdiscapacidad",
                        verbose_name="Servicio",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maestro_Grado_Especial",
                "verbose_name_plural": "Maestros_Grados_Especiales",
                "db_table": "especial_maestrogrado",
            },
        ),
    ]
